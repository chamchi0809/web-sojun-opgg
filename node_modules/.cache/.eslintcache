[{"C:\\Users\\참치\\Desktop\\opgg-clone\\src\\index.tsx":"1","C:\\Users\\참치\\Desktop\\opgg-clone\\src\\App.tsx":"2","C:\\Users\\참치\\Desktop\\opgg-clone\\src\\pages\\ChampionsList.tsx":"3","C:\\Users\\참치\\Desktop\\opgg-clone\\src\\components\\Header.tsx":"4","C:\\Users\\참치\\Desktop\\opgg-clone\\src\\components\\Champion.tsx":"5","C:\\Users\\참치\\Desktop\\opgg-clone\\src\\model\\ChampionModel.tsx":"6","C:\\Users\\참치\\Desktop\\opgg-clone\\src\\components\\ChampionTrendItem.tsx":"7","C:\\Users\\참치\\Desktop\\opgg-clone\\src\\components\\ChampionTrendHeader.tsx":"8","C:\\Users\\참치\\Desktop\\opgg-clone\\src\\components\\ChampionTrendToolbar.tsx":"9","C:\\Users\\참치\\Desktop\\opgg-clone\\src\\model\\ChampionTrendModel.tsx":"10"},{"size":205,"mtime":1626924955629,"results":"11","hashOfConfig":"12"},{"size":23370,"mtime":1627012810162,"results":"13","hashOfConfig":"12"},{"size":13963,"mtime":1627097046777,"results":"14","hashOfConfig":"12"},{"size":3274,"mtime":1626752144305,"results":"15","hashOfConfig":"12"},{"size":1875,"mtime":1627013303238,"results":"16","hashOfConfig":"12"},{"size":285,"mtime":1626834529393,"results":"17","hashOfConfig":"12"},{"size":3927,"mtime":1627091975290,"results":"18","hashOfConfig":"12"},{"size":582,"mtime":1627007449901,"results":"19","hashOfConfig":"12"},{"size":962,"mtime":1626927879073,"results":"20","hashOfConfig":"12"},{"size":581,"mtime":1627005459962,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"at9kvw",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\참치\\Desktop\\opgg-clone\\src\\index.tsx",[],["47","48"],"C:\\Users\\참치\\Desktop\\opgg-clone\\src\\App.tsx",[],"C:\\Users\\참치\\Desktop\\opgg-clone\\src\\pages\\ChampionsList.tsx",["49","50","51"],"import axios from \"axios\";\r\nimport React, { ChangeEvent } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport classnames from \"classnames\";\r\nimport Champion from \"../components/Champion\";\r\nimport ChampionModel from \"../model/ChampionModel\";\r\nimport championTier from \"../assets/icons/icon-champion-p.png\";\r\nimport championTierN from \"../assets/icons/icon-champion-n.png\";\r\nimport ChampionTrendItem from \"../components/ChampionTrendItem\";\r\nimport ChampionTrendHeader, { ChampionTrendItemCss } from \"../components/ChampionTrendHeader\";\r\nimport ChampionTrendToolbar from \"../components/ChampionTrendToolbar\";\r\nimport ChampionTrendModel from \"../model/ChampionTrendModel\";\r\n\r\ninterface ChampionListProps {\r\n\r\n}\r\n\r\ninterface ChampionListState {\r\n    allChampions: ChampionModel[];\r\n    champions: ChampionModel[];\r\n    type: string;\r\n    search: string;\r\n\r\n    trendChampions: ChampionTrendModel[];\r\n    trendType: string;\r\n    trendPosition:string;\r\n}\r\n\r\nconst ChampionListPageWrapper = styled.div`\r\n    display: flex;\r\n    width: 1080px;\r\n    margin: 0 auto;\r\n    margin-top: 100px;\r\n`\r\n\r\n// List of champion page\r\nexport default class ChampionsList extends React.Component<ChampionListProps, ChampionListState> {\r\n    constructor(props: ChampionListProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            allChampions: [],\r\n            champions: [],\r\n            type: \"ALL\",\r\n            search: \"\",\r\n\r\n            trendChampions: [],\r\n            trendType: \"tier\", // winratio, pickratio, banratio\r\n            trendPosition:\"top\"\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const response = await axios.get(\"http://opgg.dudco.kr/champion\");\r\n        const allChampions = response.data.map((data: any) => \r\n            new ChampionModel({\r\n                id: data.id,\r\n                name: data.name,\r\n                key: data.key,\r\n                position: data.position\r\n            })\r\n        );\r\n        const trendChampions = await this.getTrendList(\"tier\");\r\n        \r\n        this.setState({\r\n            allChampions,\r\n            champions: allChampions,\r\n            trendChampions,\r\n        });\r\n    }\r\n\r\n    onChangeType = (type: string) => () => {\r\n        this.setState({\r\n            type,\r\n            champions: this.filterChampions(type),\r\n            search: \"\",\r\n        });\r\n    }\r\n    \r\n    filterChampions = (type: string) => {\r\n        switch (type) {\r\n            case \"TOP\":\r\n                return this.state.allChampions.filter(c => c.position!!.indexOf(\"탑\") > -1);        \r\n            case \"JUG\":\r\n                return this.state.allChampions.filter(c => c.position!!.indexOf(\"정글\") > -1);        \r\n            case \"MID\":\r\n                return this.state.allChampions.filter(c => c.position!!.indexOf(\"미드\") > -1);        \r\n            case \"ADC\":\r\n                return this.state.allChampions.filter(c => c.position!!.indexOf(\"바텀\") > -1);        \r\n            case \"SUP\":\r\n                return this.state.allChampions.filter(c => c.position!!.indexOf(\"서포터\") > -1);        \r\n            default:\r\n                return this.state.allChampions;\r\n        }\r\n    }\r\n\r\n    onChangeSearch = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const value = e.target.value;\r\n        if(value != \"\") {\r\n            const searchChamp = this.filterChampions(this.state.type).filter(champ => champ.name?.includes(value) );\r\n            this.setState({champions: searchChamp, search: value});\r\n        } else {\r\n            const champions = this.filterChampions(this.state.type);\r\n            this.setState({champions, search: value})\r\n        }\r\n    }\r\n\r\n    getTrendList = async (type: string, position?: string) => {\r\n        if(!position) {\r\n            if(type === \"tier\") position = \"top\"\r\n            else position = \"all\";\r\n        }\r\n\r\n        const responseTrend =  await axios.get(`http://opgg.dudco.kr/champion/trend/${type}/${position}`)        \r\n        const trendChampions = responseTrend.data.map((data: any) => \r\n            new ChampionTrendModel({\r\n                id: data.id,\r\n                rank: data.rank,\r\n                change: data.change,\r\n                name: data.name,\r\n                position: data.position,\r\n                winRate: data.winRate,\r\n                pickRate: data.pickRate,\r\n                banRate: data.banRate,\r\n                tierIcon: data.tierIcon,\r\n            })\r\n        );\r\n        return trendChampions;\r\n    }\r\n\r\n    onClickTrendType = (type: string) => async () => {\r\n        const trendChampions = await this.getTrendList(type);\r\n        this.setState({\r\n            trendType: type,\r\n            trendChampions,\r\n            trendPosition: type===\"tier\"?\"top\":\"all\"\r\n        });\r\n    }\r\n    onClickTrendPosition = (position: string) => async() => {\r\n        const trendChampions = await this.getTrendList(this.state.trendType, position);\r\n        this.setState({trendChampions, trendPosition: position});\r\n    }\r\n    render() {\r\n        return (\r\n            <ChampionListPageWrapper>\r\n                <ChampionsWrapper>\r\n                    <div className=\"header\">\r\n                        <div className=\"item-wrap\">\r\n                            <div className={classnames(\"item\", {select: this.state.type === \"ALL\"})} onClick={this.onChangeType(\"ALL\")}>전체</div>\r\n                            <div className={classnames(\"item\", {select: this.state.type === \"TOP\"})} onClick={this.onChangeType(\"TOP\")}>탑</div>\r\n                            <div className={classnames(\"item\", {select: this.state.type === \"JUG\"})} onClick={this.onChangeType(\"JUG\")}>정글</div>\r\n                            <div className={classnames(\"item\", {select: this.state.type === \"MID\"})} onClick={this.onChangeType(\"MID\")}>미드</div>\r\n                            <div className={classnames(\"item\", {select: this.state.type === \"ADC\"})} onClick={this.onChangeType(\"ADC\")}>바텀</div>\r\n                            <div className={classnames(\"item\", {select: this.state.type === \"SUP\"})} onClick={this.onChangeType(\"SUP\")}>서포터</div>\r\n                        </div>\r\n                        <input type=\"text\" placeholder=\"챔피언 검색 (가렌, ㄱㄹ, ...)\" onChange={this.onChangeSearch} value={this.state.search}/>\r\n                    </div>\r\n                    <div className=\"list\">\r\n                        {\r\n                            this.state.champions.map((data) => \r\n                                <Champion \r\n                                    key={data.id}\r\n                                    id={Number(data.id) || 0}\r\n                                    position={data.position || []}\r\n                                    name = {data.name || \"\"}\r\n                                />\r\n                            )\r\n                        }\r\n                        {[1, 2, 3, 4, 5, 6].map(() => <div style={{width: \"82px\", height: 0}}/>)}\r\n                    </div>\r\n                </ChampionsWrapper>\r\n                <ChampionTrendWrapper>\r\n                    <div className=\"header\">\r\n                        <div>챔피언 순위</div>\r\n                        <div className=\"item-wrap\">\r\n                            <div \r\n                                className={classnames(\"item\", {select: this.state.trendType === \"tier\"})} \r\n                                onClick={this.onClickTrendType(\"tier\")}\r\n                            >\r\n                                <img src={this.state.trendType === \"tier\" ? championTier : championTierN}/>\r\n                                티어\r\n                            </div>\r\n                            <div \r\n                                className={classnames(\"item\", {select: this.state.trendType === \"winratio\"})}\r\n                                onClick={this.onClickTrendType(\"winratio\")}\r\n                            >\r\n                                승률\r\n                            </div>\r\n                            <div \r\n                                className={classnames(\"item\", {select: this.state.trendType === \"pickratio\"})} \r\n                                onClick={this.onClickTrendType(\"pickratio\")}\r\n                            >\r\n                                픽률\r\n                            </div>\r\n                            <div \r\n                                className={classnames(\"item\", {select: this.state.trendType === \"banratio\"})} \r\n                                onClick={this.onClickTrendType(\"banratio\")}\r\n                            >\r\n                                밴률\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"list\">\r\n                        <ChampionTrendToolbar>\r\n                        <div className={classnames(\"\",{select: this.state.trendPosition === \"all\"})} hidden={this.state.trendType === \"tier\"} onClick={this.onClickTrendPosition(\"all\")}>전체</div>\r\n                            <div className={classnames(\"\",{select: this.state.trendPosition === \"top\"})} onClick={this.onClickTrendPosition(\"top\")}>탑</div>\r\n                            <div className={classnames(\"\",{select: this.state.trendPosition === \"jungle\"})} onClick={this.onClickTrendPosition(\"jungle\")}>정글</div>\r\n                            <div className={classnames(\"\",{select: this.state.trendPosition === \"mid\"})} onClick={this.onClickTrendPosition(\"mid\")}>미드</div>\r\n                            <div className={classnames(\"\",{select: this.state.trendPosition === \"adc\"})} onClick={this.onClickTrendPosition(\"adc\")}>바텀</div>\r\n                            <div className={classnames(\"\",{select: this.state.trendPosition === \"support\"})} onClick={this.onClickTrendPosition(\"support\")}>서포터</div>\r\n                        </ChampionTrendToolbar>\r\n                        <ChampionTrendHeader>\r\n                            <div>#</div>\r\n                            <div>챔피언</div>\r\n                            <div hidden={this.state.trendType !== \"winratio\" && this.state.trendType !== \"pickratio\" && this.state.trendType !== \"tier\"}>승률</div>\r\n                            <div hidden={this.state.trendType !== \"pickratio\" && this.state.trendType !== \"winratio\" && this.state.trendType !== \"tier\"}>픽률</div>\r\n                            <div hidden={this.state.trendType !== \"banratio\"}>벤률</div>\r\n                            <div hidden={this.state.trendType !== \"tier\"}>티어</div>\r\n                        </ChampionTrendHeader>\r\n                        \r\n                        {\r\n                            this.state.trendChampions.map(c => \r\n                                <ChampionTrendItem \r\n                                    championID={c.id}\r\n                                    change={c.change}\r\n                                    name={c.name}\r\n                                    position={c.position}\r\n                                    win={c.winRate}\r\n                                    pick={c.pickRate}\r\n                                    tier={c.tierIcon}\r\n                                    rank={c.rank}\r\n                                    ban={c.banRate}\r\n                                    trendType={this.state.trendType}\r\n                                />\r\n                            )\r\n                        }\r\n                    </div>\r\n                </ChampionTrendWrapper>\r\n            </ChampionListPageWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nconst ChampionsWrapper = styled.div`\r\n    border-right: 1px solid #e9eff4;\r\n    & > .header {\r\n        display: flex;\r\n        background-color: white;\r\n        justify-content: space-between;\r\n        padding: 0 17px;\r\n        border-bottom: 1px solid #e9eff4;\r\n\r\n        &  > .item-wrap {\r\n            display: flex;\r\n        }\r\n\r\n        & > .item-wrap > .item {\r\n            line-height: 60px;\r\n            padding: 0 12px;\r\n            color: rgba(0, 0,0, .6);\r\n            cursor: pointer;\r\n\r\n            &.select {\r\n                box-shadow: 0px -3px 0px 0px #5383e8 inset;\r\n                color: #5383e8;\r\n                font-weight: bold;\r\n            }\r\n        }\r\n\r\n        & > input {\r\n            width: 200px;\r\n            margin: 10px 0;\r\n            padding: 0 10px;\r\n            border: none;\r\n            background-color: #f7f7f7;\r\n        }\r\n    }\r\n\r\n    & > .list {\r\n        width: 564px;\r\n        background-color: #f7f7f7;\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        justify-content: space-between;\r\n        padding: 0 30px;\r\n    }\r\n`\r\n\r\nconst ChampionTrendWrapper = styled.div`\r\n    flex: 1;\r\n    background-color: white;\r\n\r\n    & > div.header {\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        display: flex;\r\n        border-bottom: 1px solid #e9eff4;\r\n\r\n        font-weight: bold;\r\n        font-size: 14px;\r\n        padding: 0 20px;\r\n\r\n        & > .item-wrap {\r\n            display: flex;\r\n            color: rgba(0,0,0,.6);\r\n\r\n            & > .item {\r\n                display: flex;\r\n                align-items: center;\r\n                position: relative;\r\n                line-height: 60px;\r\n                margin: 0 10px;\r\n                padding: 0 5px;\r\n                cursor: pointer;\r\n            }\r\n\r\n            & > .item > img {\r\n                height: 17px;\r\n                margin-right: 5px;\r\n            }\r\n\r\n            & > .item:not(:last-child)::after {\r\n                content: \"\";\r\n                width: 1px;\r\n                height: 20px;\r\n                background-color: #eee;\r\n                position: absolute;\r\n                right: -10px;\r\n                top: 50%;\r\n                margin-top: -10px;\r\n            }\r\n\r\n            & > .item.select {\r\n                color: #5383e8;\r\n                box-shadow: 0px -3px 0px 0px #5383e8 inset;\r\n            }\r\n        }\r\n    }\r\n\r\n    & > div.list {\r\n        background-color: #f7f7f7;\r\n        padding: 20px;\r\n    }\r\n`","C:\\Users\\참치\\Desktop\\opgg-clone\\src\\components\\Header.tsx",[],"C:\\Users\\참치\\Desktop\\opgg-clone\\src\\components\\Champion.tsx",[],"C:\\Users\\참치\\Desktop\\opgg-clone\\src\\model\\ChampionModel.tsx",[],"C:\\Users\\참치\\Desktop\\opgg-clone\\src\\components\\ChampionTrendItem.tsx",["52","53","54","55","56","57","58"],"\r\nimport React, { ChangeEvent } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ChampionTrendItemCss } from \"./ChampionTrendHeader\";\r\nimport classnames from \"classnames\";\r\n\r\nimport championTier1 from \"../assets/icons/icon-champtier-1.png\"\r\nimport champion32 from \"../assets/champion32.png\"\r\nimport tierStay from \"../assets/icons/icon-championtier-stay.png\"\r\nimport tierUp from \"../assets/icons/icon-championtier-up.png\"\r\nimport tierDown from \"../assets/icons/icon-championtier-down.png\"\r\nimport ChampionTrendHeader from \"./ChampionTrendHeader\";\r\n\r\ninterface ChampionTrendItemProps{\r\n    championID:number;\r\n    change:number;\r\n    name:string;\r\n    position:string;\r\n    win:string;\r\n    pick:string;\r\n    tier:string;\r\n    rank:string;\r\n    ban:string;\r\n    trendType:string;\r\n}\r\n\r\nconst ChampionTrendWrapper = styled(ChampionTrendHeader)`\r\n    background-color: white;\r\n    border: 1px solid #e9eff4;\r\n    &:not(:last-child){\r\n        border-bottom:none;\r\n    }\r\n    &>.rank{\r\n        font-style: italic;\r\n        font-size:20px;\r\n    }\r\n    &>.champ{\r\n        display: flex;\r\n        align-items: center;\r\n        text-align: left;\r\n        &>.change{\r\n            display: flex;\r\n            align-items: center;\r\n            font-size:14px;\r\n            line-height: 14px;\r\n            padding: 0 10px;\r\n            width:50px;\r\n            box-sizing:border-box;\r\n            &>img{\r\n                margin-right:2px;\r\n            }\r\n            &.up{\r\n                color: green;\r\n            }\r\n            &.down{\r\n                color: red;\r\n            }\r\n        }\r\n        &>.champ-img{\r\n            width: 32px;\r\n            height: 32px;\r\n            background-image: url(${champion32});            \r\n        }\r\n        &>.champ-desc{\r\n            font-size:12px;\r\n            margin-left: 5px;\r\n            display: flex;\r\n            flex-direction: column;\r\n            justify-content: space-between;\r\n\r\n            &>:first-child{\r\n                font-weight: bold;\r\n            }\r\n        }\r\n    }\r\n    &>.select{        \r\n        color:#5383e8;\r\n        font-weight:bold;     \r\n        order:0;   \r\n    }\r\n`\r\n\r\nconst ChampionTrendItem: React.FC<ChampionTrendItemProps>=(props)=>{\r\n    const getTierChangeIcon=()=>{\r\n        if(props.change>0){\r\n            return tierUp;\r\n        }else if(props.change <0){\r\n            return tierDown;\r\n        }else{\r\n            return tierStay;\r\n        }\r\n    }\r\n    \r\n    return(\r\n        <ChampionTrendWrapper>\r\n            <div className=\"rank\">{props.rank}</div>\r\n            <div className=\"champ\">\r\n                <div className={classnames(\"change\",{up:props.change>0,down:props.change<0})}>\r\n                    <img src={getTierChangeIcon()} alt=\"\" />\r\n                    {Math.abs(props.change)}\r\n                </div>\r\n                <div className={`champ-img __spc32-${props.championID}`}/>\r\n                <div className=\"champ-desc\">\r\n                    <div>{props.name}</div>\r\n                    <div>{props.position}</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div hidden={props.trendType !== \"winratio\" && props.trendType !== \"pickratio\" && props.trendType !== \"tier\"} className={classnames(\"win\", {select: props.trendType == \"winratio\"})}  >{props.win}</div>\r\n            <div hidden={props.trendType !== \"pickratio\" && props.trendType !== \"winratio\" && props.trendType !== \"tier\"} className={classnames(\"pick\", {select: props.trendType == \"pickratio\"})} >{props.pick}</div>\r\n            <div hidden={props.trendType !== \"banratio\" } className={classnames(\"ban\", {select: props.trendType == \"banratio\"})}>{props.ban}</div>\r\n            <div hidden={props.trendType !== \"tier\"} className={classnames(\"tier\", {select: props.trendType == \"tier\"})}>\r\n                <img src={props.tier} alt=\"\" />\r\n            </div>\r\n        </ChampionTrendWrapper>\r\n    )\r\n}\r\n\r\nexport default ChampionTrendItem;","C:\\Users\\참치\\Desktop\\opgg-clone\\src\\components\\ChampionTrendHeader.tsx",["59"],"import React from \"react\";\r\nimport styled,{css} from \"styled-components\";\r\n\r\nexport const ChampionTrendItemCss=css`\r\n    display:flex;\r\n    align-items: center;\r\n    &>div{\r\n        text-align: center;\r\n        color:rgba(0,0,0,.6);\r\n    }\r\n`\r\n\r\nconst ChampionTrendHeader=styled.div`\r\n    ${ChampionTrendItemCss}\r\n    padding:15px;\r\n    &>div{\r\n        flex:1;\r\n        font-size:12px;\r\n        &:nth-child(1){\r\n            flex:.5;\r\n            text-align: center;\r\n        }\r\n        &:nth-child(2){\r\n            flex:3;\r\n        }\r\n    }\r\n`\r\n\r\nexport default ChampionTrendHeader;","C:\\Users\\참치\\Desktop\\opgg-clone\\src\\components\\ChampionTrendToolbar.tsx",["60","61","62","63","64","65","66"],"import React from \"react\";\r\nimport styled,{css} from \"styled-components\";\r\nimport ChampionTrendHeader from \"../components/ChampionTrendHeader\"\r\nimport { ChampionTrendItemCss } from \"../components/ChampionTrendHeader\";\r\n\r\nimport championTier1 from \"../assets/icons/icon-champtier-1.png\"\r\nimport champion32 from \"../assets/champion32.png\"\r\nimport tierStay from \"../assets/icons/icon-championtier-stay.png\"\r\n\r\ninterface ChampionTrendItemProps{\r\n\r\n}\r\n\r\n\r\n\r\nconst ChampionTrendToolbar=styled.div`\r\n    ${ChampionTrendItemCss}\r\n    &>div{\r\n        flex:1;\r\n        background-color: white;\r\n        border:1px solid #e9eff4;                \r\n        text-align: center;\r\n        padding: 10px 0;\r\n        font-size:12px;\r\n        font-weight:bold;\r\n        cursor:pointer;\r\n        &:not(:first-child){\r\n            border-left: none;\r\n        }\r\n        &.select{\r\n            color:black;                    \r\n        }\r\n    }\r\n`\r\nexport default ChampionTrendToolbar","C:\\Users\\참치\\Desktop\\opgg-clone\\src\\model\\ChampionTrendModel.tsx",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":10,"column":31,"nodeType":"73","messageId":"74","endLine":10,"endColumn":51},{"ruleId":"75","severity":1,"message":"76","line":99,"column":18,"nodeType":"77","messageId":"78","endLine":99,"endColumn":20},{"ruleId":"79","severity":1,"message":"80","line":180,"column":33,"nodeType":"81","endLine":180,"endColumn":108},{"ruleId":"71","severity":1,"message":"82","line":2,"column":17,"nodeType":"73","messageId":"74","endLine":2,"endColumn":28},{"ruleId":"71","severity":1,"message":"72","line":4,"column":10,"nodeType":"73","messageId":"74","endLine":4,"endColumn":30},{"ruleId":"71","severity":1,"message":"83","line":7,"column":8,"nodeType":"73","messageId":"74","endLine":7,"endColumn":21},{"ruleId":"75","severity":1,"message":"84","line":109,"column":177,"nodeType":"77","messageId":"78","endLine":109,"endColumn":179},{"ruleId":"75","severity":1,"message":"84","line":110,"column":178,"nodeType":"77","messageId":"78","endLine":110,"endColumn":180},{"ruleId":"75","severity":1,"message":"84","line":111,"column":113,"nodeType":"77","messageId":"78","endLine":111,"endColumn":115},{"ruleId":"75","severity":1,"message":"84","line":112,"column":109,"nodeType":"77","messageId":"78","endLine":112,"endColumn":111},{"ruleId":"71","severity":1,"message":"85","line":1,"column":8,"nodeType":"73","messageId":"74","endLine":1,"endColumn":13},{"ruleId":"71","severity":1,"message":"85","line":1,"column":8,"nodeType":"73","messageId":"74","endLine":1,"endColumn":13},{"ruleId":"71","severity":1,"message":"86","line":2,"column":16,"nodeType":"73","messageId":"74","endLine":2,"endColumn":19},{"ruleId":"71","severity":1,"message":"87","line":3,"column":8,"nodeType":"73","messageId":"74","endLine":3,"endColumn":27},{"ruleId":"71","severity":1,"message":"83","line":6,"column":8,"nodeType":"73","messageId":"74","endLine":6,"endColumn":21},{"ruleId":"71","severity":1,"message":"88","line":7,"column":8,"nodeType":"73","messageId":"74","endLine":7,"endColumn":18},{"ruleId":"71","severity":1,"message":"89","line":8,"column":8,"nodeType":"73","messageId":"74","endLine":8,"endColumn":16},{"ruleId":"71","severity":1,"message":"90","line":10,"column":11,"nodeType":"73","messageId":"74","endLine":10,"endColumn":33},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"@typescript-eslint/no-unused-vars","'ChampionTrendItemCss' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ChangeEvent' is defined but never used.","'championTier1' is defined but never used.","Expected '===' and instead saw '=='.","'React' is defined but never used.","'css' is defined but never used.","'ChampionTrendHeader' is defined but never used.","'champion32' is defined but never used.","'tierStay' is defined but never used.","'ChampionTrendItemProps' is defined but never used.","no-global-assign","no-unsafe-negation"]